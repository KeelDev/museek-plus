Museek uses the SConstruct build system (www.scons.org) for building and
installing all components. If you got Museek from as an official
release tarball (ie. not from the Subversion repository, and not a
snapshot), 'scons' should be included with the release and you can start
scons using 'python scons/scons.py'.

If you distrbutions provides a scons package, you should install it and 
use this one instead of the included scons.


For the impatient and/or people with AD(H)D:

# scons install

Dependencies:

Museek depends on:
 - libxml++-1.0.x or 2.6.x

Museeq (the Qt GUI) depends on:
 - Qt 3.2 or newer
 - Qt translation tools, lrelease and lupdate
 - QSA 1.1 or newer (optional) for scripting support

Murmur and Musetup-GTK depends on:
 - PyGTK2

Mucous depends on:
- Python-Curses (included with Python)

The SCons build system depends on:
 - Python (including pyexpat for musetup)
 - SCons itself is at http://scons.org
 - A C compiler
 - A C++ compiler with access to an STL implementation that has wstring
   support (no MacOSX, Cygwin or FreeBSD4) such as GCC.
 - Development packages for libxml++ and optionally Qt
 - Swig, for the Mucipher python bindings



Using the build system:

$ scons/scons.py [options]... [targets]...

or:

$ python scons/scons.py [options]... [targets]...

For a list of options (and what they're currently set to):

$ scons -h

Available options (options marked with [*] are remembered between scons
runs):

  PREFIX=prefix         [*] Install prefix, where to install Museek to
                            (default:'/usr/local')

  BINDIR=prefix         [*] Binary directory, where to install binaries to
                            (default: '$PREFIX/bin')

  DATADIR=prefix        [*] Data directory, where to install data files
                            (default: '$PREFIX/share/museek')

  MANDIR=prefix         [*] Man Page dictory, where to install man pages
                            (default: '$PREFIX/man/man1')

  DESTDIR=prefix            Installation destination dir, useful for package
                            builders. (default: '')

  BUILDDIR=yes/no       [*] Build to build-platform-arch subdirectory
                            default: yes

  RELEASE=yes/no        [*] Build for release with optimizations and without
                            debugging information (only for gcc)
                            default: no
  LOCKFLAGS=yes/no      [*] Do not allow SCons to modify the CFLAGS you set
  			    
  FLAGS=-fPIC -Wall -pipe -g -O0 -O1 -O2 -O3 -funrollloop -Os -fomit-frame-pointer
                        [*] Which CCFLAGS to use. (Now a single string, prepend the dash "-" )
                            default: '-fPIC -Wall -pipe'
  MULOG=debug,cycle,calltrace,traffictime
                        [*] Which debugging messages to include
                            default: 'debug'

  EPOLL=yes/no          [*] Use epoll when available (linux 2.6+)
                            default: yes

  VORBIS=yes/no         [*] Use OGG VORBIS support when available
                            default: yes
			    
  MUCOUS=yes/no         [*] If pymucipher is available, install mucous
                            default: yes

  MUSEEQ=yes/no         [*] Test for Qt, and if available, build museeq
                            default: yes

  ONLYMUSEEQ=yes/no     [*] Only compile Mucipher and museeq
                            default: no

  MUSEEQTRANSLATIONS=fr,de,it,es,pl  [*] Build translations for Museeq

  MUSEEQTRAYICON=yes/no [*] Build Museeq with a Trayicon
  
  QSA=yes/no            [*] Test for QSA, and if available, build museeq with it
                            default: yes

  QTDIR=prefix          [*] Directory where Qt can be found (should have an
                            include and lib subdirectory)
                            default: auto-detect

  QT_LIB=lib            [*] Specify which Qt library to use.
                            default: 'qt' with fallback to 'qt-mt'



Available build targets (that make sense):

  museekd               Build the museek daemon

  Tools                 Build the museek tools (only muscan/muscand for now)

  museeq                Build the Qt GUI to museekd

  install_museekd       Install museekd

  install_museeq        Install museeq

  install_muscan        Install the museek file scanner, muscan
  install_mucand        Install the file scanning daemon, muscand
  install_tools         Install the museek tools (read: muscan & muscand)

  install_mucipher      Install language bindings for Mucipher (cipher
                        library)

  install_pymuseekd     Install python bindings for Museekd, mulog, and musetup

  install               Install all of the above

Default targets that are built: museekd, Tools, museeq
